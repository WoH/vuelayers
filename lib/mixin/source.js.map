{"version":3,"file":"source.js","sources":["src/mixin/source.js"],"sourcesContent":["import { isArray, isEqual, isString } from '../util/minilo'\nimport mergeDescriptors from '../util/multi-merge-descriptors'\nimport cmp from './ol-virt-cmp'\nimport useMapCmp from './use-map-cmp'\n\nexport default {\n  mixins: [cmp, useMapCmp],\n  props: {\n    attributions: {\n      type: [String, Array],\n      validator: value => isString(value) || (isArray(value) && value.every(isString)),\n    },\n    attributionsCollapsible: {\n      type: Boolean,\n      default: true,\n    },\n    projection: String,\n    wrapX: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  computed: {\n    state () {\n      if (!this.rev || !this.$source) {\n        return\n      }\n\n      return this.$source.getState()\n    },\n  },\n  methods: {\n    /**\n     * @return {module:ol/source/Source~Source|Promise<module:ol/source/Source~Source>}\n     * @protected\n     */\n    createOlObject () {\n      return this.createSource()\n    },\n    /**\n     * @return {module:ol/source/Source~Source|Promise<module:ol/source/Source~Source>}\n     * @protected\n     * @abstract\n     */\n    createSource () {\n      throw new Error('Not implemented method')\n    },\n    /**\n     * @return {Promise|void}\n     * @protected\n     */\n    init () {\n      return this::cmp.methods.init()\n    },\n    /**\n     * @return {Promise|void}\n     * @protected\n     */\n    deinit () {\n      return this::cmp.methods.deinit()\n    },\n    /**\n     * @return {Object}\n     * @protected\n     */\n    getServices () {\n      const vm = this\n\n      return mergeDescriptors(this::cmp.methods.getServices(), {\n        get source () { return vm.$source },\n      })\n    },\n    /**\n     * @return {Promise|void}\n     * @protected\n     */\n    mount () {\n      this.$sourceContainer && this.$sourceContainer.setSource(this)\n\n      return this::cmp.methods.mount()\n    },\n    /**\n     * @return {Promise|void}\n     * @protected\n     */\n    unmount () {\n      this.$sourceContainer && this.$sourceContainer.setSource(undefined)\n\n      return this::cmp.methods.unmount()\n    },\n    /**\n     * @return {Promise}\n     */\n    refresh () {\n      if (!this.$source) return Promise.resolve()\n\n      return new Promise(resolve => {\n        if (this.$source) {\n          this.$source.once('change', () => resolve)\n          this.$source.refresh()\n        } else {\n          resolve()\n        }\n      })\n    },\n    /**\n     * Internal usage only in components that doesn't support refreshing.\n     * @return {Promise}\n     * @protected\n     */\n    remount () {\n      return this::cmp.methods.remount()\n    },\n    /**\n     * Internal usage only in components that doesn't support refreshing.\n     * @return {Promise}\n     * @protected\n     */\n    recreate () {\n      return this::cmp.methods.recreate()\n    },\n    /**\n     * @protected\n     */\n    subscribeAll () {\n      this::cmp.methods.subscribeAll()\n    },\n  },\n  watch: {\n    attributions (value) {\n      if (!this.$source || isEqual(value, this.$source.getAttributions())) {\n        return\n      }\n\n      this.$source.setAttributions(value)\n    },\n    attributionsCollapsible (value) {\n      if (!this.$source || value === this.$source.getAttributionsCollapsible()) {\n        return\n      }\n\n      this.scheduleRecreate()\n    },\n    projection (value) {\n      if (\n        !this.$source ||\n        (this.$source.getProjection() && value === this.$source.getProjection().getCode())\n      ) {\n        return\n      }\n\n      this.scheduleRecreate()\n    },\n    wrapX (value) {\n      if (!this.$source || value === this.$source.getWrapX()) {\n        return\n      }\n\n      this.scheduleRecreate()\n    },\n  },\n  stubVNode: {\n    empty () {\n      return this.$options.name\n    },\n  },\n  created () {\n    this::defineServices()\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    /**\n     * @type {module:ol/source/Source~Source|undefined}\n     */\n    $source: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    $map: {\n      enumerable: true,\n      get: () => this.$services && this.$services.map,\n    },\n    $view: {\n      enumerable: true,\n      get: () => this.$services && this.$services.view,\n    },\n    $sourceContainer: {\n      enumerable: true,\n      get: () => this.$services && this.$services.sourceContainer,\n    },\n  })\n}\n"],"names":["mixins","cmp","useMapCmp","props","attributions","type","String","Array","validator","value","isString","isArray","every","attributionsCollapsible","Boolean","default","projection","wrapX","computed","state","rev","$source","getState","methods","createOlObject","createSource","Error","init","deinit","getServices","vm","mergeDescriptors","source","mount","$sourceContainer","setSource","unmount","undefined","refresh","Promise","resolve","once","remount","recreate","subscribeAll","watch","isEqual","getAttributions","setAttributions","getAttributionsCollapsible","scheduleRecreate","getProjection","getCode","getWrapX","stubVNode","empty","$options","name","created","defineServices","Object","defineProperties","enumerable","get","$olObject","$map","$services","map","$view","view","sourceContainer"],"mappings":"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"}