{"version":3,"file":"index.js","sources":["src/component/wms-source/source.vue?rollup-plugin-vue=script.js","src/component/wms-source/source.vue","src/component/wms-source/index.js"],"sourcesContent":["\nimport TileWMSSource from 'ol/source/TileWMS'\nimport WMSServerType from 'ol/source/WMSServerType'\nimport { makeWatchers } from '../../util/vue-helpers'\nimport { tileSource, wmsSource } from '../../mixin'\n\nexport default {\n  name: 'vl-source-wms',\n  mixins: [tileSource, wmsSource],\n  props: {\n    gutter: Number,\n    hidpi: {\n      type: Boolean,\n      default: true,\n    },\n    serverType: {\n      type: String,\n      validator: value => !value || Object.values(WMSServerType).includes(value),\n    },\n    url: {\n      type: String,\n      required: true,\n      validator: value => !!value.length,\n    },\n  },\n  methods: {\n    /**\n     * @returns {TileWMS}\n     * @protected\n     */\n    createSource () {\n      return new TileWMSSource({\n        attributions: this.attributions,\n        cacheSize: this.cacheSize,\n        params: this.allParams,\n        crossOrigin: this.crossOrigin,\n        gutter: this.gutter,\n        hidpi: this.hidpi,\n        logo: this.logo,\n        tileGrid: this._tileGrid,\n        projection: this.projection,\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        serverType: this.serverType,\n        wrapX: this.wrapX,\n        url: this.urlTmpl,\n        transition: this.transition,\n        tileLoadFunction: this.tileLoadFunction,\n      })\n    },\n  },\n  watch: {\n    ...makeWatchers([\n      'gutter',\n      'hidpi',\n      'serverType',\n    ], () => function () {\n      this.scheduleRecreate()\n    }),\n  },\n}\n","<script>\n  import TileWMSSource from 'ol/source/TileWMS'\n  import WMSServerType from 'ol/source/WMSServerType'\n  import { makeWatchers } from '../../util/vue-helpers'\n  import { tileSource, wmsSource } from '../../mixin'\n\n  export default {\n    name: 'vl-source-wms',\n    mixins: [tileSource, wmsSource],\n    props: {\n      gutter: Number,\n      hidpi: {\n        type: Boolean,\n        default: true,\n      },\n      serverType: {\n        type: String,\n        validator: value => !value || Object.values(WMSServerType).includes(value),\n      },\n      url: {\n        type: String,\n        required: true,\n        validator: value => !!value.length,\n      },\n    },\n    methods: {\n      /**\n       * @returns {TileWMS}\n       * @protected\n       */\n      createSource () {\n        return new TileWMSSource({\n          attributions: this.attributions,\n          cacheSize: this.cacheSize,\n          params: this.allParams,\n          crossOrigin: this.crossOrigin,\n          gutter: this.gutter,\n          hidpi: this.hidpi,\n          logo: this.logo,\n          tileGrid: this._tileGrid,\n          projection: this.projection,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          serverType: this.serverType,\n          wrapX: this.wrapX,\n          url: this.urlTmpl,\n          transition: this.transition,\n          tileLoadFunction: this.tileLoadFunction,\n        })\n      },\n    },\n    watch: {\n      ...makeWatchers([\n        'gutter',\n        'hidpi',\n        'serverType',\n      ], () => function () {\n        this.scheduleRecreate()\n      }),\n    },\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  Source,\n  plugin as install,\n}\n"],"names":["name","mixins","tileSource","wmsSource","props","gutter","Number","hidpi","type","Boolean","default","serverType","String","validator","value","Object","values","WMSServerType","includes","url","required","length","methods","createSource","TileWMSSource","attributions","cacheSize","params","allParams","crossOrigin","logo","tileGrid","_tileGrid","projection","reprojectionErrorThreshold","wrapX","urlTmpl","transition","tileLoadFunction","watch","makeWatchers","scheduleRecreate","plugin","Vue","options","installed","pick","assign","Source","component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,aAAe;EACbA,IAAI,EAAE,eADO;EAEbC,MAAM,EAAE,CAACC,UAAD,EAAaC,SAAb,CAFK;EAGbC,KAAK,EAAE;IACLC,MAAM,EAAEC,MADH;IAELC,KAAK,EAAE;MACLC,IAAI,EAAEC,OADD;MAELC,OAAO,EAAE;KAJN;IAMLC,UAAU,EAAE;MACVH,IAAI,EAAEI,MADI;MAEVC,SAAS,EAAE,mBAAAC,KAAK;eAAI,CAACA,KAAD,IAAUC,MAAM,CAACC,MAAP,CAAcC,aAAd,EAA6BC,QAA7B,CAAsCJ,KAAtC,CAAd;;KARb;IAULK,GAAG,EAAE;MACHX,IAAI,EAAEI,MADH;MAEHQ,QAAQ,EAAE,IAFP;MAGHP,SAAS,EAAE,mBAAAC,KAAK;eAAI,CAAC,CAACA,KAAK,CAACO,MAAZ;;;GAhBP;EAmBbC,OAAO,EAAE;;;;;IAKPC,YALO,0BAKS;aACP,IAAIC,aAAJ,CAAkB;QACvBC,YAAY,EAAE,KAAKA,YADI;QAEvBC,SAAS,EAAE,KAAKA,SAFO;QAGvBC,MAAM,EAAE,KAAKC,SAHU;QAIvBC,WAAW,EAAE,KAAKA,WAJK;QAKvBxB,MAAM,EAAE,KAAKA,MALU;QAMvBE,KAAK,EAAE,KAAKA,KANW;QAOvBuB,IAAI,EAAE,KAAKA,IAPY;QAQvBC,QAAQ,EAAE,KAAKC,SARQ;QASvBC,UAAU,EAAE,KAAKA,UATM;QAUvBC,0BAA0B,EAAE,KAAKA,0BAVV;QAWvBvB,UAAU,EAAE,KAAKA,UAXM;QAYvBwB,KAAK,EAAE,KAAKA,KAZW;QAavBhB,GAAG,EAAE,KAAKiB,OAba;QAcvBC,UAAU,EAAE,KAAKA,UAdM;QAevBC,gBAAgB,EAAE,KAAKA;OAflB,CAAP;;GAzBS;EA4CbC,KAAK,oBACAC,YAAY,CAAC,CACd,QADc,EAEd,OAFc,EAGd,YAHc,CAAD,EAIZ;WAAM,YAAY;WACdC,gBAAL;KADC;GAJY,CADZ;CA5CP;;;ACHY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ,SAASC,MAAT,CAAiBC,GAAjB,EAAoC;MAAdC,OAAc,uEAAJ,EAAI;;MAC9BF,MAAM,CAACG,SAAX,EAAsB;;;;EAGtBH,MAAM,CAACG,SAAP,GAAmB,IAAnB;EAEAD,OAAO,GAAGE,IAAI,CAACF,OAAD,EAAU,gBAAV,CAAd;EACA7B,MAAM,CAACgC,MAAP,CAAcC,MAAd,EAAsBJ,OAAtB;EAEAD,GAAG,CAACM,SAAJ,CAAcD,MAAM,CAAChD,IAArB,EAA2BgD,MAA3B;;;;;;"}